# This text file should explain how to deploy your website.

# You should write detailed description on:

# 1. All the packages you need to install
# 2. How to configure various servers (e.g., Nginx, Apache, etc)

Note: This is a partial copy from README.md. For better experience of viewing deployment doc, please check README.md.

## Website is hosing on
`https://petpal.jimschenchen.com/`

## Local Deployment

###  Deployment - Backend (Django Rest Framework)

#### Setup
Instructions to setup sever in Ubuntu 20.04.6

```shell
cd ./backend/
sh startup.sh
source venv/bin/activate
sh run.sh
```

#### API documentation
View API documentation: `127.0.0.1:8000/swagger/`

docs.pdf generated by https://www.swdoc.org



###  Local Deployment - Frontend (React)
```shell
cd ./frontend/
npm install
npm start
```

### Local Deployment - Database & Storage & Email host
Config `backend/.env` with reference to section [Environment Variables](#environment-variables) .

If `backend/.env` does not exist, copy `backend/.env_example` and change name to `backend/.
env`.

Note: Please do not publish `backend/.env` to avoid information leakage.


## Serverless Deployment

### Project Hosting Platform: Vercel
+ Frontend and backend are hosted as two separate projects on Vercel.
+ Go to [Vercel](vercel.com), add new project, select the repo holding your code, `Root Directory` select to `frontend` if you are hosting `frontend` first. Click deploy. Frontend vercel config file are on `backend/vercel.json` and it's already set for you.
+ Create a new project and select `Root Directory` as `backend` to host our `backend`. Select `Framework Preset` as `Create React Project` if you are hosting `backend`.
+ Go to `settings` -> `Environment Variables` and add all the Environment Variables there. Please refer to section [Environment Variables](#environment-variables) .
+ **Note**: Since serverless deployment is stateless, local storage and local database are not allowed. Please setup your own database and your own storage and set Environment Variables properly in section [Environment Variables](#environment-variables).

### Postgresql
We are using [supabase](https://supabase.com/) as our Postgresql. Create an account on [supabase](https://supabase.com/), create an project and copy all the database information to [Environment Variables](#environment-variables).

### Storage
We are using AWS S3 as our storage. You can check this tutorial to create your S3: [tutorial](https://testdriven.io/blog/storing-django-static-and-media-files-on-amazon-s3/). Then add your S3 information to [Environment Variables](#environment-variables).


## Environment Variables

**Database:**
+ `USE_POSTGRESQL = "TRUE"`: Using postgresql, otherwise using local sqlite.
+ If you are using postgresql, following variables must be set: `DB_NAME`, `DB_USER`, `DB_PASSWORD`, `DB_HOST`, `DB_PORT`


**Media Storage:**
+ `USE_S3 = "TRUE"`: Using AWS S3 as media storage, otherwise using local folder.
+ If you are using AWS S3, following variables must be set: `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, `AWS_STORAGE_BUCKET_NAME`
+ Note: Static files are always using local storage, you can changing that in `backend/petpal/settings.py`

**Email Host Server:**
+ Email Host are used to send email for resetting passwords.
+ Configuring following variables `EMAIL_HOST_USER` and `EMAIL_HOST_PASSWORD`
+ Setup and get variables from Gmail. tutorial: [tutorial](https://support.google.com/mail/answer/185833?hl=en)
